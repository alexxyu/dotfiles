###########
# Aliases #
###########

# Python aliases
alias pip="pip3"
[[ $(command -v bpython) ]] && function python () {
    test -z "$1" && bpython || python3 "$@";
}
alias pyvenv="source .venv/bin/activate"
alias pycrenv="python -m venv .venv --system-site-packages && actenv"

# Interactive ripgrep + fzf search
function cs {
    RG_PREFIX="rg --hidden --glob '!.git/' --line-number --color=always --smart-case "
    INITIAL_QUERY="${*:-}"
    : | fzf --ansi --disabled --query "$INITIAL_QUERY" \
        --bind "start:reload:$RG_PREFIX {q}" \
        --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
        --bind 'ctrl-t:transform:[[ ! $FZF_PROMPT =~ ripgrep ]] &&
          echo "rebind(change)+change-prompt(1. ripgrep> )+disable-search+transform-query:echo \{q} > /tmp/rg-fzf-f; cat /tmp/rg-fzf-r" ||
          echo "unbind(change)+change-prompt(2. fzf> )+enable-search+transform-query:echo \{q} > /tmp/rg-fzf-r; cat /tmp/rg-fzf-f"' \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --prompt '1. ripgrep> ' \
        --delimiter : \
        --preview 'bat --color=always {1} --highlight-line {2}' \
        --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
        --bind 'enter:become(nvim {1} +{2})'
}

#####################
# Terminal settings #
#####################

# Disable terminal ctrl-s behavior to allow bpython to save
stty -ixon

# Explicitly set emacs keybindings
set -o emacs
# Show filetypes in autocompletion list
setopt list_types
# Append trailing slash to directories from filename generation (globbing)
setopt mark_dirs
# Prevent aliases from being substituted when determining completions
setopt COMPLETE_ALIASES

# Allow alt/option + arrow keys to navigate by word
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word

# Make up/down keys search for matching prefix in history
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward

# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# switch group using `[` and `]`
zstyle ':fzf-tab:*' switch-group '[' ']'
# use tab to trigger continuous completion
zstyle ':fzf-tab:*' continuous-trigger 'tab'
# general fzf-tab settings
zstyle ':fzf-tab:*' fzf-min-height 15

# preview content with ls/bat when completing commands involving directories or regular files
zstyle ':fzf-tab:complete:(cd|z|ls|gls|cp|mv|find|rm|rmdir|vim|nvim|less|cat|bat):*' fzf-preview \
	'if [[ -d $realpath ]]; then
        ls -ahgGp --color=always --group-directories-first $realpath
    else
        bat --color=always --style=numbers --line-range=:500 $realpath
    fi'
# preview man pages
zstyle ':fzf-tab:complete:man:*' fzf-preview \
	'tldr --color=always $word'

# preview git
zstyle ':fzf-tab:complete:git-(add|diff|restore):*' fzf-preview \
	'git diff $realpath | delta  -w ${FZF_PREVIEW_COLUMNS:-$COLUMNS}'
zstyle ':fzf-tab:complete:git-log:*' fzf-preview \
    'git log --color=always $word'
zstyle ':fzf-tab:complete:git-help:*' fzf-preview \
    'git help $word | bat -plman --color=always'
zstyle ':fzf-tab:complete:git-checkout:*' fzf-preview \
    'case "$group" in
    "[modified file]")
		if [[ -d $realpath ]]; then
			ls -ahgGp --color=always --group-directories-first $realpath
		else
			# https://github.com/wfxr/forgit/issues/121#issuecomment-725358145
			git diff $realpath | delta -w ${FZF_PREVIEW_COLUMNS:-$COLUMNS}
		fi
		;;
    "[recent commit object name]")
		git show --color=always $word | delta
		;;
    *)
		git log --color=always $word
		;;
    esac'
zstyle ':fzf-tab:complete:git-(add|diff|restore|checkout):*' fzf-flags --height=80% --preview-window=65%:right

# preview docker
zstyle ':fzf-tab:complete:docker-*:*' fzf-preview '(docker inspect $word | jq -C)'
zstyle ':fzf-tab:complete:docker-*:*' fzf-flags --height=80% --preview-window=50%:right
zstyle ':fzf-tab:complete:docker-logs:*' fzf-preview 'docker logs -f $word | bat'

# Setup zsh plugins: syntax highlighting + autosuggestions
# Allow case-insensitive autocompletion for lowercase characters
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# Keybindings
# bindkey '^I'       complete-word       # tab               | complete
bindkey '^[[Z'     autosuggest-accept  # shift + tab       | autosuggest

###################
# Terminal themes #
###################

__termbg_precmd_function () {
    _set_light () {
        export BAT_THEME='Catppuccin-latte'
        export FZF_DEFAULT_OPTS=" \
            --color=bg+:#ccd0da,bg:#eff1f5,spinner:#dc8a78,hl:#d20f39 \
            --color=fg:#4c4f69,header:#d20f39,info:#8839ef,pointer:#dc8a78 \
            --color=marker:#dc8a78,fg+:#4c4f69,prompt:#8839ef,hl+:#d20f39"
        zstyle ":fzf-tab:*" fzf-flags --color=hl:0
        export TERMBG='light'
    }

    _set_dark () {
        export BAT_THEME='Dracula'
        export FZF_DEFAULT_OPTS=" \
            --color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 \
            --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 \
            --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 \
            --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4"
        export TERMBG='dark'
    }

    local tbg=$(termbg 2> /dev/null)
    if [[ "$tbg" = "light" ]]; then
        _set_light
    elif [[ "$tbg" = "dark" ]]; then
        _set_dark
    elif [[ "$TERMBG" = "light" ]]; then
        _set_light
    else
        _set_dark
    fi
}

typeset -ag precmd_functions;
precmd_functions=( __termbg_precmd_function ${precmd_functions[@]} )

##################
# Misc. settings #
##################

# HACK: fix delta autocompletion (https://github.com/dandavison/delta/issues/1167#issuecomment-1678568122)
compdef _gnu_generic delta
